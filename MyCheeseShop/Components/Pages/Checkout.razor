@page "/checkout"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MyCheeseShop.Components.Shared
@using MyCheeseShop.Context
@using MyCheeseShop.Model
@using System.ComponentModel.DataAnnotations
@attribute [Authorize]
@inject NavigationManager NavigationManager
@inject ShoppingCart ShoppingCart
@inject UserProvider UserProvider
@inject OrderProvider OrderProvider
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore
@inject AuthenticationStateProvider AutheticationStateProvider




<h3> Checkout </h3>
<div class="card mb-1" style="border: 1px solid #FFD700">
        <div class="card-body" style="background-color:#0000">
        <h4 class="card-title">Order Summary</h4>
        <CartSummary/>
        <div>
            <button @onclick="GoToCart" class="btn btn-warning mr-2"> Back To Cart </button>
        </div>
        </div>
</div>
            

<EditForm EditContext="editContext" OnValidSubmit="MakePayment">
    <DataAnnotationsValidator />

 <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-md-5">
                <div class="card mt-5">
                    <div class="card-body">
                        <h4 class="card-title text-center">Customer Information</h4>
                        <div class="form-group mb-3 text-center">
                            <label class="form-label">Name</label>
                            <input class="form-control text-center" value="@GetFormattedName(user)" disabled />
                        </div>
                        <div class="form-group mb-3 text-center">
                            <label class="form-label">Address</label>
                            <input class="form-control text-center" value="@GetFormattedAddress(user)" disabled />
                        </div>
                        <div class="form-group mb-3 text-center">
                            <label class="form-label">Email</label>
                            <input class="form-control text-center" value="@user.Email" disabled />
                        </div>

                    </div>
                </div>
            </div>
      </div>
</div>
  
  <div class="container-fluid">
      <div class="row justify-content-center">
          <div class="col-md-5">
              <div class="card mt-5">
                  <div class="card-body">
                      <h4 class="card-title text-center payment-card-title">Payment</h4>
                      <div class="form-group mb-3">
                          <label class="form-label payment-form-label">Card Name</label>
                            <InputText class="form-control payment-form-input" placeholder="@GetFormattedName(user)" @bind-Value="paymentDetails.NameOnCard" />
                      </div>
                      <div class="form-group mb-3">
                          <label class="form-label payment-form-label">Card Number</label>
                          <InputText class="form-control payment-form-input" placeholder="0000-0000-0000-0000" @bind-Value="paymentDetails.CardNumber" />
                      </div>
                      <div class="form-group mb-3">
                          <label class="form-label payment-form-label">Expiry Date</label>
                            <InputText class="form-control payment-form-input" placeholder="00-00-00" @bind-Value="paymentDetails.ExpiryDate" />
                      </div>
                      <div class="form-group mb-3">
                          <label class="form-label payment-form-label">Security Code</label>
                            <InputText class="form-control payment-form-input" placeholder="000" @bind-Value="paymentDetails.SecurityCode" />
                      </div>
                        <div>
                            <button type="submit" class="btn btn-warning d-flex align-items-center">
                            <span>Make Payment</span>
                            @if(isPaying)
                            {
                               <span class="spinner-border spinner-border-sm float-none" aria-hidden="true"></span>
                            }
                           </button>
                        </div>
                  </div>
              </div>
          </div>
      </div>
  </div>

 
   
  
   

    
      

</EditForm>

@code {

    private User user;
    private PaymentDetails paymentDetails;
    private EditContext editContext;
    private bool isPaying;

    protected override async Task OnInitializedAsync()
    {
        paymentDetails = new PaymentDetails();
        editContext = new EditContext(paymentDetails);

        var authState = await AutheticationStateProvider.GetAuthenticationStateAsync();
        var username = authState!.User!.Identity!.Name!;
        user = UserProvider.GetUserByUsername(username);

    }



    private async Task MakePayment()
    {
        await StimulatePayment();

        await OrderProvider.CreateOrder(user, ShoppingCart.GetItems());
        ShoppingCart.Clear();
        NavigationManager.NavigateTo("/thankyou");
    }

    private async Task StimulatePayment()
    {
        isPaying = true;
        StateHasChanged();
        await Task.Delay(1500);
        isPaying = false;
        StateHasChanged();

    }

    public void GoToCart()
    {
        NavigationManager.NavigateTo("cart");
    }

    private string GetFormattedName(User user)
    {
        return $"{user.FirstName} {user.LastName}";
    }

    private string GetFormattedAddress(User user)
    {
        return $"{user.Address}{Environment.NewLine}{user.City}{Environment.NewLine}{user.Postcode}";
    }

    private sealed class PaymentDetails
    {
        [Required]
        public string NameOnCard { get; set;}

        [Required]
        public string CardNumber { get; set; }

        [Required]
        public string ExpiryDate { get; set; }

        [Required]
        public string SecurityCode { get; set; }
    }

}
